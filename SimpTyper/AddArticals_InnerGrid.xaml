<UserControl x:Class="SimpTyper.AddArticals_InnerGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="208" d:DesignWidth="500"
             RenderOptions.BitmapScalingMode="NearestNeighbor">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background7" ImageSource="Pic/Add_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border7" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background7" ImageSource="Pic/Add_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border7" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="Add" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background7}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border7}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterX="20.5" CenterY="12"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                             Duration="0:0:0.05"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)"  
                                             To="1.1"  />
                                        <DoubleAnimation  
                                             Duration="0:0:0.05"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)"  
                                             To="1.1"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(Y)"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                             Duration="0:0:0.1"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)"  
                                             To="1"  />
                                        <DoubleAnimation  
                                             Duration="0:0:0.1"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)"  
                                             To="1"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background8" ImageSource="Pic/Create_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border8" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background8" ImageSource="Pic/Create_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border8" Color="White"/>
        <Style x:Key="Create" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background8}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border8}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterX="20.5" CenterY="12"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                             Duration="0:0:0.05"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)"  
                                             To="1.1"  />
                                        <DoubleAnimation  
                                             Duration="0:0:0.05"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)"  
                                             To="1.1"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(Y)"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                             Duration="0:0:0.1"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)"  
                                             To="1"  />
                                        <DoubleAnimation  
                                             Duration="0:0:0.1"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)"  
                                             To="1"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background10" ImageSource="Pic/addanartical_Button_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border10" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background10" ImageSource="Pic/addanartical_Button_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border10" Color="White"/>
        <Style x:Key="Add_articals" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background10}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border10}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterX="70" CenterY="12"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                             Duration="0:0:0.05"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)"  
                                             To="1.1"  />
                                        <DoubleAnimation  
                                             Duration="0:0:0.05"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)"  
                                             To="1.1"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(Y)"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                             Duration="0:0:0.1"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleX)"  
                                             To="1"  />
                                        <DoubleAnimation  
                                             Duration="0:0:0.1"  
                                             Storyboard.TargetName="border"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleY)"  
                                             To="1"  />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background9" ImageSource="Pic/Brows_Button_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border9" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background9" ImageSource="Pic/Brows_Button_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border9" Color="White"/>
        <Style x:Key="Browse" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background9}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border9}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterX="38.5" CenterY="12"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(Y)"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF959595"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FFa10000"/>
        <Style x:Key="TextBoxStyle_Browse" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <DockPanel LastChildFill="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="2,3,18,3" Width="375"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                            <!--当点击清除按钮后，清空文本框中的内容-->
                            <!--<DataTrigger Binding="{Binding ElementName=PART_ContentHostClearButton,Path=IsPressed}" Value="True">
                                <Setter Property="Text" Value=""/>
                            </DataTrigger>-->

                            <!--focus or lostfocus文本框时-->
                            <!--
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text.Length}" Value="0"/>
                                    -->
                            <!--<Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsFocused}" Value="False"/>-->
                            <!--
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter TargetName="PART_ContentHost" Property="Background">
                                        <Setter.Value>
                                            <VisualBrush Opacity="0.3" Stretch="None" AlignmentX="Left">
                                                <VisualBrush.Visual>
                                                    <TextBlock Text="Filter Articals..." FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Arial"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>-->

                            <!--当文本框有内容时才显示clear button 无内容则显示filter-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text.Length}" Value="0"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <!--<Setter TargetName="PART_ContentHostClearButton" Property="Visibility" Value="Collapsed" />-->
                                    <Setter TargetName="PART_ContentHost" Property="Background">
                                        <Setter.Value>
                                            <VisualBrush Opacity="0.3" Stretch="None" AlignmentX="Left">
                                                <VisualBrush.Visual>
                                                    <TextBox Text="Local Path(.txt file whose size is not more than 20KB)..." FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Arial" Foreground="Black" Background="{x:Null}" BorderBrush="{x:Null}" SelectionBrush="{x:Null}"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Setter.Value>
                                    </Setter>

                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <ImageBrush x:Key="Button.Static.Background6" ImageSource="Pic/addbutton_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border6" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background6" ImageSource="Pic/addbutton_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border6" Color="White"/>
        <ImageBrush x:Key="Button.Pressed.Background6" ImageSource="Pic/addbutton_pressed.png"/>
        <SolidColorBrush x:Key="Button.Pressed.Border6" Color="White"/>
        <ImageBrush x:Key="Button.Disabled.Background6" ImageSource="Pic/addbutton_disabled.png"/>
        <SolidColorBrush x:Key="Button.Disabled.Border6" Color="White"/>
        <Style x:Key="Add_Button" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background6}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border6}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <DockPanel LastChildFill="True" Margin="25,0,-125,0">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Label x:Name="AddArticals_label" Content="Add it immediately!" Opacity="1" FontFamily="Arial" FontSize="13" Width="164" Margin="0,2,0,-2" Foreground="#FFA10000"/>

                            </DockPanel>

                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterX="20.5" CenterY="12"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border6}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border6}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border6}"/>
                                <Setter Property="Foreground" TargetName="AddArticals_label" Value="#ff606060"/>
                                <Setter Property="Opacity" TargetName="border" Value="0.4"/>
                            </Trigger>
                            <EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(Y)"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1.5"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <!--<EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="AddArticals_label"
                                            Storyboard.TargetProperty="Opacity"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>-->
                            <!--<EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames                               
                                            Storyboard.TargetName="AddArticals_label"
                                            Storyboard.TargetProperty="Opacity"  
                                            >
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </UserControl.Resources>
    <Grid x:Name="Innergrid" Loaded="Innergrid_Loaded" Margin="3,3,3,3" Height="200" VerticalAlignment="Top">
        <Grid.Effect>
            <DropShadowEffect Opacity="0.5" BlurRadius="4" Color="#ffa10000" ShadowDepth="0" RenderingBias="Quality"/>
        </Grid.Effect>
        <Grid.Background>
            <ImageBrush RenderOptions.BitmapScalingMode="NearestNeighbor" ImageSource="Pic/Addarticalbg.png"/>
        </Grid.Background>
        <Grid x:Name="Innergrid_up">
            <Button x:Name="AddTitle_Grid_Button_Add" FocusManager.FocusedElement="{Binding ElementName=Browse}" Loaded="AddTitle_Grid_Button_Add_Loaded" Margin="208,0,0,160" RenderOptions.BitmapScalingMode="Linear" HorizontalAlignment="Left" Width="29" Height="18" Style="{DynamicResource Add}" PreviewMouseLeftButtonDown="AddTitle_Grid_Button_Add_PreviewMouseLeftButtonDown" MouseEnter="AddTitle_Grid_Button_Add_MouseEnter" MouseLeave="AddTitle_Grid_Button_Add_MouseLeave" RenderTransformOrigin="-5.933,1.333" VerticalAlignment="Bottom"/>
            <Button x:Name="AddTitle_Grid_Button_Create" Loaded="AddTitle_Grid_Button_Create_Loaded" Margin="262,0,0,160" RenderOptions.BitmapScalingMode="Linear" HorizontalAlignment="Left" Width="52" Height="18" Style="{DynamicResource Create}" PreviewMouseLeftButtonDown="AddTitle_Grid_Button_Create_PreviewMouseLeftButtonDown" MouseEnter="AddTitle_Grid_Button_Create_MouseEnter" MouseLeave="AddTitle_Grid_Button_Create_MouseLeave" RenderTransformOrigin="-5.933,1.333" VerticalAlignment="Bottom"/>
            <!--<TextBox HorizontalAlignment="Left" FocusManager.FocusedElement="{Binding ElementName=Browse}" Style="{DynamicResource TextBoxStyle_withoutClear}" FontSize="13" Height="23" Margin="76,31,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="394"/>-->
            <Grid x:Name="Innergrid_Add" Visibility="Visible" Margin="10,48,10,10">
                <TextBox x:Name="Browse" Loaded="Browse_Loaded" Height="23" Margin="10,22,65,0" FontSize="13" TextChanged="Browse_TextChanged" TextWrapping="NoWrap" VerticalAlignment="Top" Style="{DynamicResource TextBoxStyle_Browse}" FontFamily="Arial"/>
                <Button Width="13" Height="13" x:Name="PART_ContentHostClearButton" Visibility="Collapsed" FocusManager.FocusedElement="{Binding ElementName=Browse}" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="0,27,68,102" PreviewMouseLeftButtonDown="PART_ContentHostClearButton_PreviewMouseLeftButtonDown">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="PART_Border" CornerRadius="0,3,0,3" BorderBrush="Transparent" BorderThickness="0" Padding="2">
                                <Path x:Name="PART_Path" RenderOptions.BitmapScalingMode="NearestNeighbor" Data="M6,6 L6,6 10,10 M10,6 L10,6 6,10" Stretch="Fill" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FFA10000" Margin="-0.5,0,0.5,0" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button x:Name="Browse_Button" RenderOptions.BitmapScalingMode="Linear" Loaded="Browse_Button_Loaded" Margin="413,0,0,99" HorizontalAlignment="Left" Width="52" Height="18" Style="{DynamicResource Browse}" PreviewMouseLeftButtonDown="Browse_Button_PreviewMouseLeftButtonDown" MouseEnter="Browse_Button_MouseEnter" MouseLeave="Browse_Button_MouseLeave" RenderTransformOrigin="-5.933,1.333" VerticalAlignment="Bottom"/>
                <!--<Button x:Name="addanartical_Button" Loaded="addanartical_Button_Loaded" Margin="247,0,0,39" RenderOptions.BitmapScalingMode="Linear" HorizontalAlignment="Left" Width="94" Height="16" Style="{DynamicResource Add_articals}" PreviewMouseLeftButtonDown="addanartical_Button_PreviewMouseLeftButtonDown" MouseEnter="addanartical_Button_MouseEnter" MouseLeave="addanartical_Button_MouseLeave" RenderTransformOrigin="-5.933,1.333" VerticalAlignment="Bottom"/>-->
                <Button x:Name="addanartical_Button" Loaded="addanartical_Button_Loaded" IsEnabled="False" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="181,0,263,15" HorizontalAlignment="Center" Width="30" Height="30" Style="{DynamicResource Add_Button}" PreviewMouseLeftButtonDown="addanartical_Button_PreviewMouseLeftButtonDown" MouseEnter="addanartical_Button_MouseEnter" MouseLeave="addanartical_Button_MouseLeave" RenderTransformOrigin="-5.933,1.333" VerticalAlignment="Bottom"/>
                <Label x:Name="error_Label" Content="" Visibility="Collapsed" Foreground="#ffa10000" HorizontalAlignment="Left" FontSize="13" Margin="10,49,0,0" VerticalAlignment="Top"/>
            </Grid>
        </Grid>
    </Grid>
</UserControl>