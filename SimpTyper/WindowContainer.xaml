<Window x:Class="SimpTyper.WindowContainer"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SimpTyper"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" 
        Title="MainWindow"
        RenderOptions.BitmapScalingMode="NearestNeighbor"
        x:Name="Window_main"
        Width="1247.9" Height="701.7" 
        WindowStyle="None" AllowsTransparency="True" MouseDoubleClick="Window_main_MouseDoubleClick"
        ResizeMode="CanResizeWithGrip" ShowInTaskbar="False"
        SizeChanged="Window_SizeChanged" MouseDown="Window_MouseDown" Style="{DynamicResource normal_NewStyle}" Icon="Pic/logo.ico">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="normal_WindowTemplateKey" TargetType="{x:Type Window}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid Margin="2">
                    <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                               RadiusX="0" RadiusY="0">
                        <Rectangle.Effect>
                            <DropShadowEffect Opacity="0.5" BlurRadius="4" ShadowDepth="0" Color="#ffa10000"/>
                        </Rectangle.Effect>
                    </Rectangle>
                    <Border Background="{TemplateBinding Background}"  
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            Padding="{TemplateBinding Margin}"  
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                            CornerRadius="0">
                        <ContentPresenter />
                    </Border>
                    <AdornerDecorator>
                        <ContentPresenter/>
                    </AdornerDecorator>
                    <ResizeGrip x:Name="WindowResizeGrip"  HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom" Style="{DynamicResource ResizeGripStyle1}" Opacity="0.5"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                        <Condition Property="WindowState" Value="Normal"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="normal_NewStyle" TargetType="{x:Type Window}">
            <Setter Property="Foreground" Value="{x:Null}"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                    <Setter Property="Template" Value="{StaticResource normal_WindowTemplateKey}"/>
                </Trigger>
                <Trigger Property="ResizeMode" Value="NoResize">
                    <Setter Property="Template" Value="{StaticResource normal_WindowTemplateKey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
            <GradientStop Color="#ffa10000" Offset="0.3"/>
            <GradientStop Color="#ffa10000" Offset="0.75"/>
            <GradientStop Color="#ffa10000" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="ResizeGripStyle1" TargetType="{x:Type ResizeGrip}">
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ResizeGrip}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <Path Data="M 9,0 L 11,0 L 11,11 L 0,11 L 0,9 L 3,9 L 3,6 L 6,6 L 6,3 L 9,3 z" HorizontalAlignment="Right" Margin="0,0,2,2" VerticalAlignment="Bottom">
                                <Path.Fill>
                                    <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 L 2,2 L 0,2 z "/>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Path.Fill>
                            </Path>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ImageBrush x:Key="Button.Pressed.Background" ImageSource="Pic/closebutton_pressed.png"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFA10000"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="White"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ImageBrush x:Key="Button.Static.Background2" ImageSource="Pic/maximizebutton_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background2" ImageSource="Pic/maximizebutton_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FFC2C2C2"/>
        <ImageBrush x:Key="Button.Pressed.Background2" ImageSource="Pic/maximizebutton_pressed.png"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF494949"/>
        <Style x:Key="MaximizeButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background5" ImageSource="Pic/minimizebutton_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border5" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background5" ImageSource="Pic/minimizebutton_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border5" Color="#FFC2C2C2"/>
        <ImageBrush x:Key="Button.Pressed.Background5" ImageSource="Pic/minimizebutton_pressed.png"/>
        <SolidColorBrush x:Key="Button.Pressed.Border5" Color="#FF494949"/>
        <Style x:Key="MinimizeButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background5}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border5}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background5}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border5}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background5}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border5}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ImageBrush x:Key="Button.Static.Background3" ImageSource="Pic/normalbutton_static.png"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="White"/>
        <ImageBrush x:Key="Button.MouseOver.Background3" ImageSource="Pic/normalbutton_mouseover.png"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FFC2C2C2"/>
        <ImageBrush x:Key="Button.Pressed.Background3" ImageSource="Pic/normalbutton_pressed.png"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF494949"/>
        <Style x:Key="NormalButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="White"/>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="load" RepeatBehavior="1x">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="main_grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Window.Resources>

    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource load}"/>
            <!--StaticResource 程序公用资源-->
        </EventTrigger>
    </Window.Triggers>

    <Grid x:Name="main_grid" Opacity="0" MouseDown="Grid_MouseDown">
        <Button Width="29" Height="28" x:Name="PART_ContentHostClearButton" DockPanel.Dock="Right" HorizontalAlignment="Right" Click="Close_Button_Click" VerticalAlignment="Top" Margin="0,-1,0,0">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="PART_Border" BorderBrush="Transparent" BorderThickness="0" Margin="0,1,0,0">
                        <Path x:Name="PART_Path" RenderOptions.BitmapScalingMode="NearestNeighbor" Data="M6,6 L6,6 10,10 M10,6 L10,6 6,10" Stretch="Fill" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#FF8E8E8E" Margin="6.51,7.25,6.25,4" Height="11.75" Width="12.24" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Border" Value="#FFDF0000"/>
                            <Setter Property="Stroke" TargetName="PART_Path" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" TargetName="PART_Border" Value="White"/>
                            <Setter Property="Stroke" TargetName="PART_Path" Value="#FF8E8E8E"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="PART_Border" Value="#FFa10000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <Button x:Name="Maximize_button" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="0,0,29,0" VerticalAlignment="Top" Height="27" Style="{DynamicResource MaximizeButton}" Click="Maximize_button_Click" HorizontalAlignment="Right" Width="29"/>
        <Button x:Name="Minimize_button" RenderOptions.BitmapScalingMode="NearestNeighbor" Margin="0,0,58,0" VerticalAlignment="Top" Width="29" Height="27" Style="{DynamicResource MinimizeButton}" Click="Minimize_button_Click" HorizontalAlignment="Right"/>
        <Label x:Name="artical_title" Content="Label" Opacity="1" Foreground="Black" HorizontalAlignment="Left" Margin="425,51,0,420" FontSize="50">
            <Label.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Label.RenderTransform>
        </Label>
        <TextBlock x:Name="Artical" Text="aaaaaaaaaabbbbbbbbbbbbbbbbbbbbbcccccccccccc" Background="White" FontSize="100" TextWrapping="NoWrap" Margin="276,187,78,291" RenderTransformOrigin="0.5,0.5" >
            <TextBlock.Foreground>
                <LinearGradientBrush EndPoint="890,220" MappingMode="Absolute">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#FFA10000" Offset="0.518"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="#FFDDA4A4" Offset="0.996"/>
                    <GradientStop Color="#FFDDA4A4" Offset="0.888"/>
                </LinearGradientBrush>
            </TextBlock.Foreground>
        </TextBlock>
        <Image Source="Pic/artical_shadow.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Margin="0,187,2,291" HorizontalAlignment="Right" Width="297">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Pic/pointer.png" Stretch="Fill" RenderTransformOrigin="1.091,0.042" Margin="244,148,0,0" Height="215" VerticalAlignment="Top" HorizontalAlignment="Left" Width="77"/>
        <TextBox x:Name="InputBox" Loaded="InputBox_Loaded" PreviewTextInput="InputBox_PreviewTextInput" TextChanged="InputBox_TextChanged" HorizontalAlignment="Left" FontSize="60" Height="132" Margin="276,421,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="890" SelectionBrush="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" Style="{DynamicResource TextBoxStyle}" Cursor="Arrow"/>
        <Label x:Name="words" Content="Label" Opacity="1" Foreground="Black" Margin="58,233,0,0" FontSize="28" Height="99" VerticalAlignment="Top" HorizontalAlignment="Left" Width="186"/>
        <Label x:Name="timer_label" Content="00:00:00" Opacity="1" Margin="58,264,0,0" FontSize="28" Height="99" VerticalAlignment="Top" HorizontalAlignment="Left" Width="186">
            <Label.Foreground>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#FFA10000"/>
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="Black" Offset="0.289"/>
                    <GradientStop Color="#FF9E0000" Offset="0.285"/>
                </LinearGradientBrush>
            </Label.Foreground>
        </Label>
        <Label x:Name="type_speed" Content="0000" Opacity="1" Margin="58,200,0,0" FontSize="28" Height="99" VerticalAlignment="Top" HorizontalAlignment="Left" Width="231" Foreground="#FFA10000"/>
        <Label Content=" WPM/min" Opacity="1" Margin="122,212,0,0" FontSize="16" Height="99" VerticalAlignment="Top" HorizontalAlignment="Left" Width="231" Foreground="Black"/>
    </Grid>
</Window>